use strict;
use warnings;

use Cwd qw{abs_path};
use FindBin;

use Test::More;
use Test::Fatal;
use Test::Deep;

use Selenium::Remote::Driver;

Selenium::Remote::Driver::force_webdriver3_session(1);
my $driver = Selenium::Remote::Driver->new(
    remote_server_addr => 'localhost',
    port => 4444,
    browser_name => 'firefox',
    accept_ssl_certs => 1,
);
isa_ok($driver,'Selenium::Remote::Driver',"Can get new S::R::D with WebDriver3");

$driver->debug_on();

is($driver->get_capabilities()->{browserName},'firefox',"Can get Capabilities correctly (WD3)");
my $sessions = $driver->get_sessions();
is(scalar(@$sessions),1,"Can fall back to selenium2 to list sessions");

ok($driver->status()->{ready},"status reports OK (WD3)");

#TODO do something about available_engines

$driver->set_timeout('page load',10000);
$driver->set_timeout('script',10000);
$driver->set_timeout('implicit',10000);
my $timeouts = $driver->get_timeouts();
is($timeouts->{pageLoad},10000,"WD3 set/get timeouts works");
is($timeouts->{script},10000,"WD3 set/get timeouts works");
is($timeouts->{implicit},10000,"WD3 set/get timeouts works");

$driver->set_async_script_timeout(20000);
$driver->set_implicit_wait_timeout(5000);
$timeouts = $driver->get_timeouts();
is($timeouts->{script},20000,"WD3 shim for set_async timeouts works");
is($timeouts->{implicit},5000,"WD3 shim for implicit timeouts works");

my $loc = abs_path("$FindBin::Bin/test.html");
ok($driver->get("file://$loc"),"Can load a web page (WD3)");

is($driver->get_alert_text(),"BEEE DOOO","get_alert_text works (WD3)");
is(exception { $driver->dismiss_alert() }, undef, "alert can be dismissed (WD3)");

#This sucker wants "value" instead of "text" like in legacy
ok($driver->send_keys_to_prompt("HORGLE"),"send_keys_to_prompt works (WD3)");
is(exception { $driver->accept_alert() }, undef, "alert can be accepted (WD3)");

my $handle = $driver->get_current_window_handle();
ok($handle,"Got a window handle (WD3)");
cmp_bag($driver->get_window_handles(),[$handle],"Can list window handles (WD3)");

my $sz = $driver->get_window_size();
ok(defined $sz->{height},"get_window_size works (WD3)");
ok(defined $sz->{width},"get window size works (WD3)");
my $pos = $driver->get_window_position();
ok(defined $pos->{x},"get_window_size works (WD3)");
ok(defined $pos->{y},"get window size works (WD3)");

like($driver->get_current_url(),qr/test.html$/,"get_current_url works (WD3)");
like($driver->get_title(),qr/test/i,"get_title works (WD3)");

my $otherloc = abs_path("$FindBin::Bin/other.html");
$driver->get("file://$otherloc");
$driver->go_back();
$driver->dismiss_alert();
$driver->dismiss_alert();
like($driver->get_title(),qr/test/i,"go_back works (WD3)");

$driver->go_forward();
like($driver->get_page_source(),qr/ZIPPY/,"go_forward & get_page_source works (WD3)");
is(exception { $driver->refresh() }, undef, "refresh works (WD3)");
$driver->go_back();
$driver->dismiss_alert();
$driver->dismiss_alert();

#TODO execute_*_script testing

ok($driver->screenshot(),"can get base64'd whole page screenshot (WD3)");
ok($driver->find_element('body','tag_name')->screenshot(0),"can get element screenshot (WD3 ONLY) and find_element (WD3) works.");

isa_ok($driver->find_element('red','class'),"Selenium::Remote::WebElement");
isa_ok($driver->find_element('text','name'),"Selenium::Remote::WebElement");
isa_ok($driver->find_element('Test Link', 'link_text'),"Selenium::Remote::WebElement");
isa_ok($driver->find_element('Test', 'partial_link_text'),"Selenium::Remote::WebElement");

ok($driver->switch_to_frame($driver->find_element('frame', 'id')),"can switch to frame (WD3)");

ok($driver->set_window_position(1,1),"can set window position (WD3)");
ok($driver->set_window_size(200,200),"can set window size (WD3)");

ok($driver->maximize_window(),"can maximize window (WD3)");
ok($driver->minimize_window(),"can minimize window (WD3 only)");
ok($driver->fullscreen_window(),"can fullscreen window (WD3 only)");
#TODO fullscreen/minimize and the other new stuff

#TODO implement new getCookieNamed
is(scalar(@{$driver->get_all_cookies()}),1,"can get cookie list (WD3)");
$driver->delete_all_cookies();
is(scalar(@{$driver->get_all_cookies()}),0,"can delete all cookies (WD3)");

#XXX actions don't work yet
#ok($driver->mouse_move_to_location(undef,0,0),"Can fall back to WD2 when moving mouse to location");
#send_keys_to_active_element

#XXX need a target=_blank new window to use, since it seems having no windows closes the session now
#is(exception { $driver->close() }, undef, "Can close window (WD3)");

#Pretty sure this one has enough 'inertia' to not disappear all the sudden
$driver->get('http://w3.org/History.html');
$driver->add_cookie('foo','bar',undef,undef,0,0,time()+5000);
is(scalar(@{$driver->get_all_cookies()}),1,"can set cookie (WD3)");

is($driver->get_cookie_named('foo')->{value},'bar',"can get cookie by name (WD3 only)");

$driver->delete_cookie_named('foo');
is(scalar(@{$driver->get_all_cookies()}),0,"can delete named cookies (WD3)");

is(exception { $driver->quit() }, undef, "Can quit (WD3)");

done_testing();
